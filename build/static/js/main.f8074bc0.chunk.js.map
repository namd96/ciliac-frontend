{"version":3,"sources":["logo.svg","api/searchAgent.js","pages/home.js","components/login.js","components/smartInputBox.js","context/productContext.js","pages/chat.js","layout/toolbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","qs","require","baseUrl","requests","token","localStorage","getItem","call","method","url","body","Agent","set","send","stringify","then","res","console","log","rawCall","setToken","ProductData","Login","props","handleInputChange","event","setState","authCreds","state","target","name","value","handleSubmit","endpoint","err","alert","msg","toggleRegister","setItem","loginCalled","username","password","ciliac_patient","this","openRegister","Card","style","width","color","Body","Title","Form","Group","controlId","Subtitle","className","textAlign","Control","type","placeholder","onChange","bind","marginBottom","Link","marginLeft","cursor","onClick","handelCilacToggle","float","backgroundColor","Button","variant","React","Component","smartInputBox","_scope","query","latestUpdatedOn","Date","getTime","setTimeout","wait","callingApiFunction","handleCheckboxChange","filtered","ProductContext","createContext","ProductProvider","Provider","Consumer","Home","results","company","glutonFree","context","data","catch","hasOwnProperty","fetchProductsList","loggedOut","show","handleSearchInput","handleClose","e","Modal","onHide","Header","closeButton","FormControl","handleMessageTyping","aria-label","aria-describedby","handleCheckBoxClick","marginTop","Footer","handleSave","openModal","Table","striped","bordered","hover","map","el","idx","contextType","list","text","fromId","toId","message","socket","openSocket","window","location","origin","replace","on","concat","emit","onSend","Toolbar","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","href","inline","App","path","component","Chat","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8074bc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import Agent from 'superagent';\r\nvar qs = require('qs')\r\n\r\n// const baseUrl = \"https://3c100fe1.ngrok.io\"\r\nconst baseUrl = \"http://3.230.95.77:8060\"\r\nexport const requests = {\r\n    token: localStorage.getItem(\"userData\") || false,\r\n    call: (method, url, body) => {\r\n\r\n        return Agent[method](`${baseUrl}/${url}`)\r\n            .set('Authorization', requests.token)\r\n            .send(qs.stringify(body))\r\n            .then((res) => {\r\n                console.log(\"[from Agent]\", res.body);\r\n                return res.body\r\n            })\r\n    },\r\n    rawCall: (method, url, body) => {\r\n\r\n        return Agent[method](`${baseUrl}/${url}`)\r\n            .send(qs.stringify(body))\r\n            .then((res) => {\r\n                console.log(\"[from Agent]\", res.body);\r\n                return res.body\r\n            })\r\n    },\r\n    setToken() {\r\n        requests.token = localStorage.getItem(\"userData\")\r\n    }\r\n}","import React from 'react'\r\nimport '../styles/home.css';\r\nimport Login from '../components/login';\r\nimport { requests } from '../api/searchAgent'\r\nimport SearchBox from '../components/smartInputBox';\r\nimport { Table, Button, Modal,FormControl } from 'react-bootstrap';\r\n// import { observer } from 'mobx-react';\r\nimport ProductContext , {ProductConsumer} from '../context/productContext'\r\nvar ProductData;\r\n// @observer\r\nclass Home extends React.Component {\r\n    static contextType = ProductContext\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            results: false,\r\n            body : {\r\n                name : \"\",\r\n                company : \"\",\r\n                glutonFree : 0\r\n            }\r\n        }\r\n    }\r\n    fetchProductsList(){\r\n         ProductData = this.context\r\nconsole.log(ProductData)\r\n        // this.setState({\r\n        //     results: ProductData\r\n        // })\r\n        requests.call(\"get\",`products`)\r\n        .then((res) => {\r\n            console.log(\"setting the state with\", res.data)\r\n            this.setState({\r\n                results: res.data\r\n            })\r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                results: false\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"rendered this\")\r\n       if(localStorage.hasOwnProperty(\"userData\")){ \r\n           this.fetchProductsList()\r\n        }else{\r\n            this.setState({\r\n                loggedOut : true\r\n            })\r\n        }\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps){\r\n    //     console.log(\"rendered this\",nextProps)\r\n    //     if(localStorage.hasOwnProperty(\"userData\") && this.state.loggedOut){\r\n    //         console.log(\"rendered this\")\r\n    //         this.setState({\r\n    //             loggedOut : false\r\n    //         })\r\n    //         this.fetchProductsList()\r\n    //     }\r\n    // }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            show: true\r\n        })\r\n    }\r\n    handleClose() {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n    handleSave() {\r\n        requests.call(\"post\",\"create/product\",this.state.body)\r\n        .then((res)=>{\r\n            console.log(res)    \r\n            this.handleSearchInput();\r\n            this.handleClose()        \r\n    })\r\n        \r\n    }\r\n\r\n    handleCheckBoxClick(){\r\n        this.setState({\r\n            body : {\r\n                ...this.state.body,\r\n                glutonFree : this.state.body.glutonFree ? 0 : 1\r\n            }\r\n        })\r\n    }\r\n    handleMessageTyping(e){\r\n        this.setState({\r\n            body : {\r\n                ...this.state.body,\r\n                [e.target.name] : e.target.value\r\n            }\r\n        })\r\n    }\r\n    loginCalled(){\r\n        console.log(\"rendered this\")\r\n        requests.setToken()\r\n        this.setState(this.state,this.fetchProductsList()); \r\n    }\r\n    handleSearchInput(query) {\r\n        if (!query) {\r\n            requests.call(\"get\", `products?glutenFree=${this.state.filtered}`)\r\n                .then((res) => {\r\n                    console.log(\"setting the state with\", res)\r\n                    this.setState({\r\n                        results: res.data\r\n                    })\r\n\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        results: false\r\n                    })\r\n                })\r\n        } else requests.call(\"get\", `products?query=${query}&glutenFree=${this.state.filtered}`)\r\n            .then((res) => {\r\n                console.log(\"setting the state with\", res)\r\n                this.setState({\r\n                    results: res.data\r\n                })\r\n\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    results: false\r\n                })\r\n            })\r\n    }\r\n    handleCheckboxChange() {\r\n        this.setState({\r\n            filtered: !this.state.filtered\r\n        })\r\n    }\r\n    render() {\r\n        ProductData = this.context\r\n        console.log(\"[results]\",ProductData)\r\n      if(localStorage.hasOwnProperty(\"userData\")) { \r\n          return (\r\n            //   <ProductConsumer>\r\n\r\n            <div>\r\n            <SearchBox wait={true}\r\n                                handleCheckboxChange={this.handleCheckboxChange.bind(this)}\r\n                                callingApiFunction={this.handleSearchInput.bind(this)}\r\n                                filtered={this.state.filtered} />\r\n                <Modal show={this.state.show} onHide={() => this.handleClose()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    Name\r\n                    <FormControl\r\n                     onChange={(e) => this.handleMessageTyping(e)}\r\n                        aria-label=\"Default\"\r\n                        name=\"name\"\r\n                        value={this.state.body.name} \r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                    Company\r\n                    <FormControl\r\n                     onChange={(e) => this.handleMessageTyping(e)}\r\n                        aria-label=\"Default\"\r\n                        name=\"company\"\r\n                        value={this.state.body.company} \r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                <input type=\"checkbox\"\r\n                onChange={()=>this.handleCheckBoxClick()}\r\n                value={this.state.body.glutonFree} \r\n\r\n                className=\"ciliac-checkbox\" style={{marginTop : \"5px\"}}></input>Gluten Free\r\n                \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.handleClose()}>\r\n                            Close\r\n                         </Button>\r\n                        <Button variant=\"primary\" onClick={() => this.handleSave()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n             \r\n                <Button onClick={() => this.openModal()}>Create</Button>\r\n                <div>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Product Name</th>\r\n                                <th>Company Name</th>\r\n                                <th>Gluten Free</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                !!this.state.results && this.state.results.map((el, idx) => {\r\n                                    return <tr>\r\n                                        <td>{idx + 1}</td>\r\n                                        <td>{el.name}</td>\r\n                                        <td>{el.company}</td>\r\n                                        <td>{el.glutonFree ? \"Yes\" : \"No\"}</td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    {/* {this.state.results && JSON.stringify(this.state.results)} */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n            // </ProductConsumer>\r\n\r\n        )\r\n    }else{\r\n        return(\r\n            <Login loginCalled={this.loginCalled.bind(this)}/>\r\n        )\r\n    }\r\n}\r\n\r\n}\r\nexport default Home;","import React from 'react'\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\nimport { requests } from '../api/searchAgent'\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authCreds: {\r\n                username: \"\",\r\n                password: \"\",\r\n                name: \"\",\r\n                ciliac_patient: false\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleRegister() {\r\n        this.setState({\r\n            openRegister: !this.state.openRegister\r\n        })\r\n    }\r\n    handleInputChange = event => {\r\n        this.setState({\r\n            authCreds: {\r\n                ...this.state.authCreds,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    handleSubmit = (endpoint) => {\r\n        requests.rawCall(\"post\",endpoint, this.state.authCreds)\r\n            .then((res) => {\r\n                if (!res.err && endpoint == \"login\") {\r\n                    localStorage.setItem(\"userData\", res.token)\r\n                    this.props.loginCalled()\r\n                } else if ((!res.err && endpoint == \"register\")) {\r\n                    alert(\"Yay,registered successfully! please login again.\")\r\n                    this.toggleRegister()\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            })\r\n    }\r\n\r\n    handelCilacToggle() {\r\n        this.setState({\r\n            authCreds: {\r\n                ...this.state.authCreds,\r\n                ciliac_patient: !this.state.authCreds.ciliac_patient\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.openRegister) {\r\n            return (\r\n                <Card style={{ width: '28rem', color: \"black\" }}>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Register</Card.Title>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>\r\n                                    Name\r\n                            </Card.Subtitle>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter name\"\r\n                                    onChange={this.handleInputChange.bind(this)}\r\n                                    name=\"name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>\r\n                                    Username\r\n                            </Card.Subtitle>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\"\r\n                                    onChange={this.handleInputChange.bind(this)}\r\n                                    name=\"username\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>Password</Card.Subtitle>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={this.handleInputChange.bind(this)}\r\n                                    name=\"password\"\r\n                                />\r\n                            </Form.Group>\r\n                            <div style={{ marginBottom: \"3%\" }}>\r\n\r\n                                <Card.Link style={{ marginLeft: \"2px\", cursor: \"pointer\" }} >Are you a ciliac patient?</Card.Link>\r\n\r\n                                <div className=\"toggle-button\">\r\n                                    <div onClick={() => this.handelCilacToggle()}\r\n                                        className=\"toggle-button-box\">\r\n                                        <div className=\"toggle-button-oval\" style={{\r\n                                            float: (this.state.authCreds.ciliac_patient) ? \"right\" : \"left\",\r\n                                            backgroundColor: (this.state.authCreds.ciliac_patient) ? \"#BEA57C\" : \"#BDBDBD\"\r\n                                        }}>\r\n                                        </div>\r\n                                    </div >\r\n                                </div>\r\n                            </div>\r\n                            <Button\r\n                                onClick={this.handleSubmit.bind(this, \"register\")}\r\n                                variant=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n\r\n                            <Card.Link style={{ marginLeft: \"2px\", cursor: \"pointer\" }} onClick={this.toggleRegister.bind(this)}>Already have an account? Register</Card.Link>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        } else return (\r\n            <Card style={{ width: '28rem', color: \"black\" }}>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Login</Card.Title>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>\r\n                                Username\r\n                            </Card.Subtitle>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter email\"\r\n                                onChange={this.handleInputChange.bind(this)}\r\n                                name=\"username\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>Password</Card.Subtitle>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                onChange={this.handleInputChange.bind(this)}\r\n                                name=\"password\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button\r\n                            onClick={this.handleSubmit.bind(this, \"login\")}\r\n                            variant=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                        <Card.Link style={{ marginLeft: \"2px\", cursor: \"pointer\" }} onClick={this.toggleRegister.bind(this)}>Don't have an account? Register</Card.Link>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n// import { timeout } from 'q';\r\n\r\n\r\nexport default class smartInputBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        var _scope = this;\r\n        var query = event.target.value;\r\n\r\n        this.setState({\r\n            latestUpdatedOn: new Date().getTime()\r\n        })\r\n        setTimeout(function () {\r\n            if (_scope.props.wait && new Date().getTime() - _scope.state.latestUpdatedOn >= 900) {\r\n                _scope.props.callingApiFunction(query)\r\n            }\r\n        }, 900)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onChange={this.handleInputChange.bind(this)} className=\"ciliac-searchbox\"></input>\r\n                <input type=\"checkbox\" \r\n                onChange={this.props.handleCheckboxChange}\r\n                value={this.props.filtered}\r\n                className=\"ciliac-checkbox\"></input>Gluten Free\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nconst ProductContext = React.createContext({})\r\n\r\nexport const ProductProvider = ProductContext.Provider\r\nexport const ProductConsumer = ProductContext.Consumer\r\nexport default ProductContext","import React from 'react'\r\nimport '../styles/chat.css';\r\nimport { requests } from '../api/searchAgent'\r\nimport SearchBox from '../components/smartInputBox';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { observer } from 'mobx-react';\r\nimport openSocket from 'socket.io-client';\r\nimport Agent from 'superagent'\r\n// var socket = openSocket('http://localhost:8060');\r\n\r\n// const baseUrl = \"https://3c100fe1.ngrok.io\"\r\nconst baseUrl = \"http://localhost:8060\"\r\n\r\n\r\n\r\n\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: [{ text: \"something\" }, { text: \"test\" }],\r\n            fromId: 1,\r\n            toId: 2,\r\n            message: \"\",\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = openSocket(`${window.location.origin.replace(\"3000\",\"8060\")}`);\r\n\r\n        this.socket.on('chat', (data) => {\r\n            this.setState({\r\n                list : this.state.list.concat({text : data})\r\n            })\r\n        });\r\n        // this.socket.emit('chat', this.state.message);\r\n\r\n        // var socket = io();\r\n    }\r\n\r\n    onSend() {\r\n        console.log(\"message\", this.state.message)\r\n        this.socket.emit('chat', this.state.message);\r\n        this.setState({\r\n            message : \"\"\r\n        })\r\n        // Agent.post(`${baseUrl}/${url}`)\r\n        // .send({message : this.state.message})\r\n        // .then((res) => {\r\n        //     console.log(\"[from Agent]\", res.body);\r\n        //     return res.body\r\n        // })\r\n    }\r\n    handleMessageTyping(message) {\r\n        console.log(\"message\", message)\r\n        this.setState({ message: message })\r\n    }\r\n\r\n    render() {\r\n        const url = `chat?from=${this.state.fromId}&to=${this.state.toId}`\r\n        return (\r\n            <div className=\"chatbox-container\">\r\n                <div className=\"chat-displayer\">\r\n                    {this.state.list && this.state.list.map((el, idx) => {\r\n                        return <div className=\"message-displayer\"><div className=\"text-container\">{el.text}</div></div>\r\n                    })}\r\n                    {/* <div className=\"message-displayer\"><div className=\"text-container\">{this.state.message}</div></div> */}\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    {/* <InputGroup.Prepend> */}\r\n                    {/* <input type=\"text\" onChange={(e) => this.handleMessageTyping(e.target.value)}\r\n                    value={this.state.message}                    id=\"inputGroup-sizing-default\"></input> */}\r\n                    {/* </InputGroup.Prepend> */}\r\n                    <FormControl\r\n                     onChange={(e) => this.handleMessageTyping(e.target.value)}\r\n                        aria-label=\"Default\"\r\n                        value={this.state.message} \r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                    <Button onClick={() => this.onSend()} variant=\"info\">Send</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport SearchBox from '../components/smartInputBox'\r\nimport { requests } from '../api/searchAgent';\r\nimport { ProductProvider } from '../context/productContext'\r\n\r\nexport default class Toolbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filtered: false\r\n        }\r\n    }\r\n\r\n    handleSearchInput(query) {\r\n        if (!query) {\r\n            requests.call(\"get\", `products?glutenFree=${this.state.filtered}`)\r\n                .then((res) => {\r\n                    console.log(\"setting the state with\", res)\r\n                    this.setState({\r\n                        results: res.data\r\n                    })\r\n\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        results: false\r\n                    })\r\n                })\r\n        } else requests.call(\"get\", `products?query=${query}&glutenFree=${this.state.filtered}`)\r\n            .then((res) => {\r\n                console.log(\"setting the state with\", res)\r\n                this.setState({\r\n                    results: res.data\r\n                })\r\n\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    results: false\r\n                })\r\n            })\r\n    }\r\n    handleCheckboxChange() {\r\n        this.setState({\r\n            filtered: !this.state.filtered\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <ProductProvider value={this.state.results || {name : \"test\"} }>\r\n\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/\">Home</Nav.Link>\r\n                            <Nav.Link href=\"/queries\">Queries</Nav.Link>\r\n                            {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown> */}\r\n                        </Nav>\r\n                        <Form inline>\r\n                            {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\r\n                            <SearchBox wait={true}\r\n                                handleCheckboxChange={this.handleCheckboxChange.bind(this)}\r\n                                callingApiFunction={this.handleSearchInput.bind(this)}\r\n                                filtered={this.state.filtered} />\r\n                            {/* <Button variant=\"outline-success\">Search</Button> */}\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </ProductProvider>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home'\nimport Chat from './pages/chat'\nimport Toolbar from './layout/toolbar'\nimport {\n  BrowserRouter as Router,\n  Link,\n  withRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nfunction App() {\n  return (\n      <div>\n        <Toolbar />\n        <Switch>\n          < Route path=\"/chat\" component={Chat} />\n          < Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}