{"version":3,"sources":["logo.svg","api/searchAgent.js","components/login.js","components/smartInputBox.js","context/productContext.js","components/enquiryForm.js","components/createProductForm.js","pages/home.js","pages/productDetails.js","pages/chat.js","pages/queries.js","layout/toolbar.js","context/globatState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","qs","require","baseUrl","requests","token","localStorage","getItem","call","method","url","body","Agent","set","send","stringify","then","res","console","log","rawCall","setToken","Login","props","handleInputChange","event","setState","authCreds","state","target","name","value","handleSubmit","endpoint","err","alert","msg","toggleRegister","setItem","loginCalled","username","password","ciliac_patient","this","openRegister","Card","style","width","color","Body","Title","Form","Group","controlId","Subtitle","className","textAlign","Control","type","placeholder","onChange","bind","marginBottom","Link","marginLeft","cursor","onClick","handelCilacToggle","float","backgroundColor","Button","variant","React","Component","smartInputBox","_scope","query","latestUpdatedOn","Date","getTime","setTimeout","wait","callingApiFunction","FormControl","createContext","results","setResults","EnquiryForm","productState","useContext","ProductContext","useState","show","setShow","company","description","user_email","setBody","handleClose","handleMessageTyping","e","Modal","onHide","Header","closeButton","aria-label","aria-describedby","email","Footer","fetchProducts","CreateProductForm","glutonFree","marginTop","Home","redirect","id","wantsToSeeDetails","setWantsToSeeDetails","useEffect","hasOwnProperty","handleVoting","key","handleViewDetails","columns","dataField","text","headerFormatter","cell","row","OverlayTrigger","trigger","placement","overlay","Popover","as","Content","class","formatter","upvotes","downvotes","_id","push","to","ProductData","bordered","keyField","data","display","justifyContent","ProductDetails","productDetails","setProductDetails","match","params","JSON","Queries","Toolbar","GlobalContext","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","href","inline","GlobalState","Provider","catch","children","App","path","component","Product","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7824ecd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import Agent from 'superagent';\r\nvar qs = require('qs')\r\n\r\n\r\n// const baseUrl = \"http://localhost:8060\"\r\nconst baseUrl = \"http://3.230.95.77:8060\"\r\nexport const requests = {\r\n    token: localStorage.getItem(\"userData\") || false,\r\n    call: (method, url, body) => {\r\n\r\n        return Agent[method](`${baseUrl}/${url}`)\r\n            .set('Authorization', requests.token)\r\n            .send(qs.stringify(body))\r\n            .then((res) => {\r\n                console.log(\"[from Agent]\", res.body);\r\n                return res.body\r\n            })\r\n    },\r\n    rawCall: (method, url, body) => {\r\n\r\n        return Agent[method](`${baseUrl}/${url}`)\r\n            .send(qs.stringify(body))\r\n            .then((res) => {\r\n                console.log(\"[from Agent]\", res.body);\r\n                return res.body\r\n            })\r\n    },\r\n    setToken() {\r\n        requests.token = localStorage.getItem(\"userData\")\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\nimport { requests } from '../api/searchAgent'\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authCreds: {\r\n                username: \"\",\r\n                password: \"\",\r\n                name: \"\",\r\n                ciliac_patient: false\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleRegister() {\r\n        this.setState({\r\n            openRegister: !this.state.openRegister\r\n        })\r\n    }\r\n    handleInputChange = event => {\r\n        this.setState({\r\n            authCreds: {\r\n                ...this.state.authCreds,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    handleSubmit = (endpoint) => {\r\n        requests.rawCall(\"post\",endpoint, this.state.authCreds)\r\n            .then((res) => {\r\n                if (!res.err && endpoint == \"login\") {\r\n                    localStorage.setItem(\"userData\", res.token)\r\n                    this.props.loginCalled()\r\n                } else if ((!res.err && endpoint == \"register\")) {\r\n                    alert(\"Yay,registered successfully! please login again.\")\r\n                    this.toggleRegister()\r\n                } else {\r\n                    alert(res.msg)\r\n                }\r\n            })\r\n    }\r\n\r\n    handelCilacToggle() {\r\n        this.setState({\r\n            authCreds: {\r\n                ...this.state.authCreds,\r\n                ciliac_patient: !this.state.authCreds.ciliac_patient\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.openRegister) {\r\n            return (\r\n                <Card style={{ width: '28rem', color: \"black\" }}>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Register</Card.Title>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>\r\n                                    Name\r\n                            </Card.Subtitle>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter name\"\r\n                                    onChange={this.handleInputChange.bind(this)}\r\n                                    name=\"name\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>\r\n                                    Username\r\n                            </Card.Subtitle>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\"\r\n                                    onChange={this.handleInputChange.bind(this)}\r\n                                    name=\"username\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>Password</Card.Subtitle>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    onChange={this.handleInputChange.bind(this)}\r\n                                    name=\"password\"\r\n                                />\r\n                            </Form.Group>\r\n                            <div style={{ marginBottom: \"3%\" }}>\r\n\r\n                                <Card.Link style={{ marginLeft: \"2px\", cursor: \"pointer\" }} >Are you a ciliac patient?</Card.Link>\r\n\r\n                                <div className=\"toggle-button\">\r\n                                    <div onClick={() => this.handelCilacToggle()}\r\n                                        className=\"toggle-button-box\">\r\n                                        <div className=\"toggle-button-oval\" style={{\r\n                                            float: (this.state.authCreds.ciliac_patient) ? \"right\" : \"left\",\r\n                                            backgroundColor: (this.state.authCreds.ciliac_patient) ? \"#BEA57C\" : \"#BDBDBD\"\r\n                                        }}>\r\n                                        </div>\r\n                                    </div >\r\n                                </div>\r\n                            </div>\r\n                            <Button\r\n                                onClick={this.handleSubmit.bind(this, \"register\")}\r\n                                variant=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n\r\n                            <Card.Link style={{ marginLeft: \"2px\", cursor: \"pointer\" }} onClick={this.toggleRegister.bind(this)}>Already have an account? Register</Card.Link>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        } else return (\r\n            <Card style={{ width: '28rem', color: \"black\" }}>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Login</Card.Title>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>\r\n                                Username\r\n                            </Card.Subtitle>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter email\"\r\n                                onChange={this.handleInputChange.bind(this)}\r\n                                name=\"username\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Card.Subtitle className=\"mb-2\" style={{ textAlign: \"left\" }}>Password</Card.Subtitle>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                onChange={this.handleInputChange.bind(this)}\r\n                                name=\"password\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button\r\n                            onClick={this.handleSubmit.bind(this, \"login\")}\r\n                            variant=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                        <Card.Link style={{ marginLeft: \"2px\", cursor: \"pointer\" }} onClick={this.toggleRegister.bind(this)}>Don't have an account? Register</Card.Link>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n// import { timeout } from 'q';\r\nimport {  FormControl } from 'react-bootstrap';\r\n\r\n\r\nexport default class smartInputBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        var _scope = this;\r\n        var query = event.target.value;\r\n\r\n        this.setState({\r\n            latestUpdatedOn: new Date().getTime()\r\n        })\r\n        setTimeout(function () {\r\n            if (_scope.props.wait && new Date().getTime() - _scope.state.latestUpdatedOn >= 900) {\r\n                _scope.props.callingApiFunction(query)\r\n            }\r\n        }, 900)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FormControl type=\"text\" onChange={this.handleInputChange.bind(this)} placeholder=\"Search products...\" className=\"mr-sm-2\" />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    results: false,\r\n    // username: false,\r\n    setResults: () => { },\r\n    // setUsername: () => { },\r\n});","import React,{useContext,useEffect,useState} from 'react'\r\nimport ProductContext , {ProductConsumer} from '../context/productContext'\r\nimport { Table, Button, Modal, FormControl } from 'react-bootstrap';\r\nimport { requests } from '../api/searchAgent'\r\n\r\n\r\nconst EnquiryForm =props=> {\r\n    const productState = useContext(ProductContext);\r\n    const [show , setShow] = useState(false);\r\n    const [body , setBody] = useState({\r\n        name : \"\",\r\n        company : \"\",\r\n        description : \"\",\r\n        user_email : \"\",\r\n        \r\n    });\r\n\r\n\r\n    const  openModal=()=> {\r\n        setShow(true)\r\n     }\r\n   const  handleClose =()=> {\r\n       setShow(false)\r\n     }\r\n   const  handleSave=()=> {\r\n         requests.call(\"post\",\"enquire\",body)\r\n         .then((res)=>{\r\n             console.log(res)    \r\n             productState.fetchProducts()\r\n             handleClose()        \r\n     })        \r\n     }\r\n \r\n \r\n   const  handleMessageTyping=(e)=>{\r\n \r\n     setBody({\r\n         ...body , \r\n             [e.target.name] : e.target.value\r\n         \r\n     })\r\n     }\r\n    return(\r\n        <div>\r\n        <Modal show={show} onHide={() => handleClose()}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Have doubts about a product? We will post your query!</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Name\r\n        <FormControl\r\n         onChange={(e) => handleMessageTyping(e)}\r\n            aria-label=\"Default\"\r\n            name=\"name\"\r\n            value={body.name} \r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n        Company\r\n        <FormControl\r\n         onChange={(e) => handleMessageTyping(e)}\r\n            aria-label=\"Default\"\r\n            name=\"company\"\r\n            value={body.company} \r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n        Description\r\n        <FormControl\r\n         onChange={(e) => handleMessageTyping(e)}\r\n            aria-label=\"Default\"\r\n            name=\"description\"\r\n            value={body.description} \r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n        Email\r\n        <FormControl\r\n         onChange={(e) => handleMessageTyping(e)}\r\n            aria-label=\"Default\"\r\n            name=\"user_email\"\r\n            value={body.email} \r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n   \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n                Close\r\n             </Button>\r\n            <Button variant=\"primary\" onClick={() => handleSave()}>\r\n                Save Changes\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n \r\n    <Button  onClick={() => openModal()}>Enquire</Button>\r\n   </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EnquiryForm","import React,{useContext,useEffect,useState} from 'react'\r\nimport ProductContext , {ProductConsumer} from '../context/productContext'\r\nimport { Table, Button, Modal, FormControl } from 'react-bootstrap';\r\nimport { requests } from '../api/searchAgent'\r\n\r\n\r\nconst CreateProductForm =props=> {\r\n    const productState = useContext(ProductContext);\r\n    const [show , setShow] = useState(false);\r\n    const [body , setBody] = useState({\r\n        name : \"\",\r\n        company : \"\",\r\n        glutonFree : false,\r\n    });\r\n\r\n    const  openModal=()=> {\r\n        setShow(true)\r\n     }\r\n   const  handleClose =()=> {\r\n       setShow(false)\r\n     }\r\n   const  handleSave=()=> {\r\n         requests.call(\"post\",\"create/product\",body)\r\n         .then((res)=>{\r\n             console.log(res)    \r\n             productState.fetchProducts()\r\n             handleClose()        \r\n     })\r\n         \r\n     }\r\n \r\n    const handleCheckBoxClick = ()=>{\r\n        setBody({\r\n            ...body,\r\n            glutonFree : !body.glutonFree\r\n        })\r\n     }\r\n   const  handleMessageTyping=(e)=>{\r\n \r\n     setBody({\r\n         ...body , \r\n             [e.target.name] : e.target.value\r\n         \r\n     })\r\n     }\r\n    return(\r\n        <div>\r\n        <Modal show={show} onHide={() => handleClose()}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Inform us about a product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Name\r\n        <FormControl\r\n         onChange={(e) => handleMessageTyping(e)}\r\n            aria-label=\"Default\"\r\n            name=\"name\"\r\n            value={body.name} \r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n        Company\r\n        <FormControl\r\n         onChange={(e) => handleMessageTyping(e)}\r\n            aria-label=\"Default\"\r\n            name=\"company\"\r\n            value={body.company} \r\n            aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n    <input type=\"checkbox\"\r\n    onChange={()=>handleCheckBoxClick()}\r\n    value={body.glutonFree} \r\n\r\n    className=\"ciliac-checkbox\" style={{marginTop : \"5px\"}}></input>Gluten Free\r\n    \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n                Close\r\n             </Button>\r\n            <Button variant=\"primary\" onClick={() => handleSave()}>\r\n                Save Changes\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n \r\n    <Button onClick={() => openModal()}>Create</Button>\r\n   </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateProductForm","import React, { useContext, useEffect, useState } from 'react'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport '../styles/home.css';\r\nimport Login from '../components/login';\r\nimport { requests } from '../api/searchAgent'\r\nimport SearchBox from '../components/smartInputBox';\r\nimport { Table, Button, Modal, FormControl, OverlayTrigger, Popover } from 'react-bootstrap';\r\n// import { observer } from 'mobx-react';\r\nimport ProductContext, { ProductConsumer } from '../context/productContext'\r\nimport EnquireForm from '../components/enquiryForm';\r\nimport CreateProductForm from '../components/createProductForm';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { fcall } from 'q';\r\nvar ProductData;\r\n\r\n// @observer\r\nconst Home = props => {\r\n    const productState = useContext(ProductContext);\r\n    const [wantsToSeeDetails, setWantsToSeeDetails] = useState({redirect : false,id : false});\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"rendered this\", productState.results)\r\n        if (localStorage.hasOwnProperty(\"userData\")) {\r\n            productState.fetchProducts()\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const handleVoting = (id, key) => {\r\n        requests.call(\"post\", `vote/${id}?type=${key}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                productState.fetchProducts()\r\n            })\r\n    }\r\n\r\n\r\n    const loginCalled = () => {\r\n        console.log(\"rendered this\")\r\n        requests.setToken()\r\n        productState.fetchProducts();\r\n    }\r\n    const handleSearchInput = (query) => {\r\n        productState.fetchProducts(query)\r\n    }\r\n    const handleViewDetails = (id) => {\r\n        console.log(\"setting\", id)\r\n        setWantsToSeeDetails({\r\n            ...wantsToSeeDetails,\r\n            redirect : true,\r\n            id : id\r\n        })\r\n    }\r\n    const voteFormatter = (cell, row) => {\r\n        return (\r\n            <div>\r\n                <OverlayTrigger\r\n                    trigger=\"hover\"\r\n                    placement={\"top\"}\r\n                    overlay={\r\n                        <Popover id={`popover-positioned-${\"top\"}`}>\r\n                            <Popover.Title as=\"h3\">{`Popover ${\"top\"}`}</Popover.Title>\r\n                            <Popover.Content>\r\n                                Vote this product as {` `}<strong>Gluten Free</strong>\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    }\r\n                >\r\n                    <i class=\"material-icons-outlined\" onClick={handleVoting.bind(this, row._id, \"up\")} >thumb_up</i>\r\n                </OverlayTrigger>\r\n                {` `} {` `}\r\n                <OverlayTrigger\r\n                    trigger=\"hover\"\r\n                    placement={\"top\"}\r\n                    overlay={\r\n                        <Popover id={`popover-positioned-${\"top\"}`}>\r\n                            <Popover.Title as=\"h3\">{`Popover ${\"top\"}`}</Popover.Title>\r\n                            <Popover.Content>\r\n                                Vote this product as {` `}<strong>Contains Gluton</strong>\r\n\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    }\r\n                >\r\n                    <i class=\"material-icons-outlined\" onClick={handleVoting.bind(this, row._id, \"down\")}>thumb_down</i>\r\n                </OverlayTrigger>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const detailsBTNFormatter = (cell, row) => {\r\n        return (\r\n            <i onClick={handleViewDetails.bind(this,row._id)} class=\"material-icons-outlined\">explore</i>\r\n        )\r\n    }\r\n    const informationFormatterVotes = (cell, row) => {\r\n        return (\r\n            <div>Upvotes\r\n            <OverlayTrigger\r\n                    trigger=\"hover\"\r\n                    placement={\"top\"}\r\n                    overlay={\r\n                        <Popover id={`popover-positioned-${\"top\"}`}>\r\n                            <Popover.Title as=\"h3\">{`Popover ${\"top\"}`}</Popover.Title>\r\n                            <Popover.Content>\r\n                                Votes received on this product as {` `}<strong>Gluten Free</strong>\r\n\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    }\r\n                >\r\n                    <i class=\"material-icons-outlined md-10\">info</i>\r\n                </OverlayTrigger>\r\n\r\n                {` `} /{` `}\r\n\r\n                Downvotes\r\n            <OverlayTrigger\r\n                    trigger=\"hover\"\r\n                    placement={\"top\"}\r\n                    overlay={\r\n                        <Popover id={`popover-positioned-${\"top\"}`}>\r\n                            <Popover.Title as=\"h3\">{`Popover ${\"top\"}`}</Popover.Title>\r\n                            <Popover.Content>\r\n                                Vote received this product as {` `}<strong>Contains Gluton</strong>\r\n\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    }\r\n                >\r\n                    <icon class=\"material-icons-outlined md-10\">info</icon>\r\n                </OverlayTrigger>\r\n            </div>\r\n        )\r\n    }\r\n    const votesFormatter = (cell, row) => {\r\n        return (\r\n            <div>\r\n                {row.upvotes} {` / `} {row.downvotes}\r\n            </div>\r\n        )\r\n    }\r\n    const columns = [\r\n        {\r\n            dataField: '_id',\r\n            text: '#'\r\n        },\r\n        {\r\n            dataField: 'name',\r\n            text: 'Product Name'\r\n        },\r\n        {\r\n            dataField: 'company',\r\n            text: 'Company Name',\r\n        },\r\n        {\r\n            dataField: 'upvotes',\r\n            text: 'Upvotes / Downvotes',\r\n            headerFormatter: informationFormatterVotes,\r\n            formatter: votesFormatter,\r\n\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'Drop your vote',\r\n            formatter: voteFormatter,\r\n\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'View Details',\r\n            formatter: detailsBTNFormatter,\r\n\r\n        },\r\n    ]\r\n\r\n    let content;\r\n    if(wantsToSeeDetails.redirect){\r\n        return (\r\n            <Redirect push to={`/product/${wantsToSeeDetails.id}`}></Redirect>\r\n        )\r\n    }\r\n    console.log(\"[results]\", ProductData)\r\n    if (localStorage.hasOwnProperty(\"userData\")) {\r\n        content = (\r\n            <div >\r\n\r\n                <h2>Track your products' gluten content</h2>\r\n                {!!productState.results && <BootstrapTable bordered={false} keyField='id' data={productState.results} columns={columns} />}\r\n\r\n\r\n\r\n                {/* {results && JSON.stringify(results)} */}\r\n\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                    <EnquireForm />\r\n                    <CreateProductForm />\r\n                </div>\r\n\r\n            </div>\r\n            // </ProductConsumer>\r\n\r\n        )\r\n    } else {\r\n        content = (\r\n            <Login loginCalled={loginCalled.bind(this)} />\r\n        )\r\n    }\r\n    return content\r\n}\r\n\r\n\r\nexport default Home;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {requests} from '../api/searchAgent'\r\n\r\nconst ProductDetails = props => {\r\n    const [productDetails,setProductDetails] = useState(false);\r\n    useEffect(()=>{\r\n        requests.call(\"get\",`product/${props.match.params.id}`)\r\n        .then((res)=>{\r\n            console.log(res);\r\n            setProductDetails(res.data)\r\n        })\r\n    },[])\r\n   \r\n   let content = <div>{props.match.params.id}{JSON.stringify(productDetails)}</div>\r\n\r\n    return content;\r\n\r\n}\r\n\r\nexport default ProductDetails","import React from 'react'\r\nimport '../styles/chat.css';\r\nimport { requests } from '../api/searchAgent'\r\nimport SearchBox from '../components/smartInputBox';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { observer } from 'mobx-react';\r\nimport openSocket from 'socket.io-client';\r\nimport Agent from 'superagent'\r\n// var socket = openSocket('http://localhost:8060');\r\n\r\n// const baseUrl = \"https://3c100fe1.ngrok.io\"\r\nconst baseUrl = \"http://localhost:8060\"\r\n\r\n\r\n\r\n\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: [{ text: \"something\" }, { text: \"test\" }],\r\n            fromId: 1,\r\n            toId: 2,\r\n            message: \"\",\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = openSocket(`${window.location.origin.replace(\"3000\",\"8060\")}`);\r\n\r\n        this.socket.on('chat', (data) => {\r\n            this.setState({\r\n                list : this.state.list.concat({text : data})\r\n            })\r\n        });\r\n        // this.socket.emit('chat', this.state.message);\r\n\r\n        // var socket = io();\r\n    }\r\n\r\n    onSend() {\r\n        console.log(\"message\", this.state.message)\r\n        this.socket.emit('chat', this.state.message);\r\n        this.setState({\r\n            message : \"\"\r\n        })\r\n        // Agent.post(`${baseUrl}/${url}`)\r\n        // .send({message : this.state.message})\r\n        // .then((res) => {\r\n        //     console.log(\"[from Agent]\", res.body);\r\n        //     return res.body\r\n        // })\r\n    }\r\n    handleMessageTyping(message) {\r\n        console.log(\"message\", message)\r\n        this.setState({ message: message })\r\n    }\r\n\r\n    render() {\r\n        const url = `chat?from=${this.state.fromId}&to=${this.state.toId}`\r\n        return (\r\n            <div className=\"chatbox-container\">\r\n                <div className=\"chat-displayer\">\r\n                    {this.state.list && this.state.list.map((el, idx) => {\r\n                        return <div className=\"message-displayer\"><div className=\"text-container\">{el.text}</div></div>\r\n                    })}\r\n                    {/* <div className=\"message-displayer\"><div className=\"text-container\">{this.state.message}</div></div> */}\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    {/* <InputGroup.Prepend> */}\r\n                    {/* <input type=\"text\" onChange={(e) => this.handleMessageTyping(e.target.value)}\r\n                    value={this.state.message}                    id=\"inputGroup-sizing-default\"></input> */}\r\n                    {/* </InputGroup.Prepend> */}\r\n                    <FormControl\r\n                     onChange={(e) => this.handleMessageTyping(e.target.value)}\r\n                        aria-label=\"Default\"\r\n                        value={this.state.message} \r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                    <Button onClick={() => this.onSend()} variant=\"info\">Send</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport {requests} from '../api/searchAgent'\r\n\r\nconst Queries = props => {\r\n    const [productDetails,setProductDetails] = useState(false);\r\n    useEffect(()=>{\r\n        requests.call(\"get\",`queries`)\r\n        .then((res)=>{\r\n            console.log(res);\r\n            setProductDetails(res.data)\r\n        })\r\n    },[])\r\n   \r\n   let content = <div>{JSON.stringify(productDetails)}</div>\r\n\r\n    return content;\r\n\r\n}\r\n\r\nexport default Queries","import React, { useContext } from 'react'\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport SearchBox from '../components/smartInputBox'\r\nimport { requests } from '../api/searchAgent';\r\nimport GlobalContext from '../context/productContext';\r\n\r\n\r\nconst Toolbar = (props) => {\r\n    const productState = useContext(GlobalContext);\r\n\r\n\r\n    const handleSearchInput = (query) => {\r\n        productState.fetchProducts(query)\r\n\r\n        // fetchProducts(query)\r\n\r\n        // if (!query) {\r\n        //     requests.call(\"get\", `products?glutenFree=${this.state.filtered}`)\r\n        //         .then((res) => {\r\n        //             console.log(\"setting the state with\", res)\r\n        //             this.setState({\r\n        //                 results: res.data\r\n        //             })\r\n\r\n        //         })\r\n        //         .catch(() => {\r\n        //             this.setState({\r\n        //                 results: false\r\n        //             })\r\n        //         })\r\n        // } else requests.call(\"get\", `products?query=${query}&glutenFree=${this.state.filtered}`)\r\n        //     .then((res) => {\r\n        //         console.log(\"setting the state with\", res)\r\n        //         this.setState({\r\n        //             results: res.data\r\n        //         })\r\n\r\n        //     })\r\n        //     .catch(() => {\r\n        //         this.setState({\r\n        //             results: false\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        // <ProductProvider value={this.state.results || {name : \"test\"} }>\r\n\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/queries\">Queries</Nav.Link>\r\n                    {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown> */}\r\n                </Nav>\r\n                <Form inline>\r\n                    {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\r\n                    <SearchBox wait={true}\r\n                        // handleCheckboxChange={this.handleCheckboxChange.bind(this)}\r\n                        callingApiFunction={handleSearchInput.bind(this)}\r\n                    // filtered={this.state.filtered} \r\n                    />\r\n                    {/* <Button variant=\"outline-success\">Search</Button> */}\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        // </ProductProvider>\r\n    )\r\n\r\n}\r\n\r\nexport default Toolbar;","import React, { useState, useReducer,useContext } from 'react';\r\nimport GlobalContext from './productContext';\r\nimport { requests } from '../api/searchAgent'\r\n\r\nconst GlobalState = props => {\r\n\r\n    let [results, setResults] = useState(false);\r\n    // let [username, setUn] = useState(false);\r\n\r\n    // let [authState, setRawState] = useState({\r\n    //     auth: false,\r\n    //     username: false,\r\n    // });\r\n    // const setAuthState = (obj) => {\r\n    //     setRawState({ ...authState, ...obj })\r\n    // }\r\n    // const logout = () => {\r\n    //     setAuth(false);\r\n    //     setUn(false);\r\n    // }\r\n    const fetchProducts = (query) => {\r\n\r\n        requests.call(\"get\", query ? `products?query=${query}` : \"products\")\r\n            .then((res) => {\r\n                console.log(\"setting the state with\", res.data)\r\n               setResults(res.data)\r\n            })\r\n            .catch(() => {\r\n                setResults(false)\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                results, setResults,\r\n                fetchProducts\r\n               \r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport default GlobalState;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home'\nimport Chat from './pages/chat'\nimport Product from './pages/productDetails'\nimport Queries from './pages/queries'\nimport Toolbar from './layout/toolbar'\nimport GlobalContext from './context/globatState'\nimport {\n  BrowserRouter as Router,\n  Link,\n  withRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nfunction App() {\n  return (\n    <GlobalContext>\n\n      <Toolbar />\n      <div className=\"app-container\">\n\n        <Switch>\n          {/* < Route path=\"/chat\" component={Chat} /> */}\n          < Route path=\"/queries\" component={Queries} />\n          < Route path=\"/product/:id\" component={Product} />\n          < Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </GlobalContext>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}